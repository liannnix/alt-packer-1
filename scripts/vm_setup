#! /bin/sh
# Script to initiate VM configuration process
set -euo pipefail

STEP_DIR="${STEP_DIR:-/tmp/steps}"
TARGET="${TARGET:-alt-server}"
VM_TYPE="${VM_TYPE:-qemu}"
SSH_USER="${SSH_USER:-test}"
TARGET_REPOS="${TARGET_REPOS:-sisyphus}"
ARCH="${ARCH:-x86_64}"
CLOUDINIT="${CLOUDINIT:-0}"
SISYPHUS="${SISYPHUS:-0}"
ROOT_PASS="${ROOT_PASS:-123}"
PASS="${PASS:-123}"

if test "${SISYPHUS}" == "1"; then
	TARGET_REPOS=sisyphus
fi

show_vars() {
	echo "Building box: ${TARGET}"
	echo "Steps are located in: ${STEP_DIR}"
	echo "Building box for VM type: ${VM_TYPE}"
	echo "Operating from user: ${SSH_USER}"
	echo "Targeting repos for: ${TARGET_REPOS}"
	echo "Targeting repos for architecture: ${ARCH}"
	echo "Enable cloud-init: ${CLOUDINIT}"
	echo "Update to Sisyphus: ${SISYPHUS}"
}

sudo_step() {
	script_name="${1}"

	echo "STEP: ${script_name}"
	sudo -E sh -c "${script_name}"
}

main() {
	echo "STEP: setup_sudo"
	{ sleep 2 ; echo "${ROOT_PASS}" ; } | script -q -c "su -c ${STEP_DIR}/setup_sudo" /dev/null

	if test "${VM_TYPE}" == "qemu"; then
		sudo_step "/tmp/disable_repos.sh"
		sudo_step "${STEP_DIR}/setup_apt"
		if test "${CLOUDINIT}" == "1"; then
			sudo_step "${STEP_DIR}/setup_cloudinit"
		fi
		sudo_step "${STEP_DIR}/setup_agent"
		sudo_step "${STEP_DIR}/setup_udev"
		sudo_step "${STEP_DIR}/setup_network"
		sudo_step "${STEP_DIR}/setup_root"
		sudo_step "${STEP_DIR}/setup_test_user"
		sudo_step "${STEP_DIR}/setup_restore_sshd_config"
		sudo_step "${STEP_DIR}/setup_ssh"
		sudo_step "${STEP_DIR}/setup_prepare_new_instance"
		sudo_step "${STEP_DIR}/setup_ansible"
	fi

	if test "${VM_TYPE}" == "vbox"; then
		sudo_step "/tmp/disable_repos.sh"
		sudo_step "${STEP_DIR}/setup_apt"
		if test "${CLOUDINIT}" == "1"; then
			sudo_step "${STEP_DIR}/setup_cloudinit"
		fi
		sudo_step "${STEP_DIR}/setup_udev"
		sudo_step "/tmp/install-guest-tools.sh"
		sudo_step "${STEP_DIR}/setup_test_user"
		sudo_step "${STEP_DIR}/setup_restore_sshd_config"
		sudo_step "${STEP_DIR}/setup_ssh"
		sudo_step "${STEP_DIR}/setup_prepare_new_instance"
		sudo_step "${STEP_DIR}/setup_ansible"
	fi

	if test "${VM_TYPE}" == "yandex"; then
		sudo_step "/tmp/disable_repos.sh"
		sudo_step "${STEP_DIR}/setup_apt"
		if test "${CLOUDINIT}" == "1"; then
			sudo_step "${STEP_DIR}/setup_cloudinit"
			sudo_step "${STEP_DIR}/setup_cloudinit_yandex"
		fi
		sudo_step "${STEP_DIR}/setup_agent"
		sudo_step "${STEP_DIR}/setup_udev"
		sudo_step "${STEP_DIR}/setup_network"
		sudo_step "${STEP_DIR}/setup_grub2"
		sudo_step "${STEP_DIR}/setup_restore_sshd_config"
		sudo_step "${STEP_DIR}/setup_ssh"
		sudo_step "${STEP_DIR}/setup_prepare_new_instance"
		sudo_step "${STEP_DIR}/setup_ansible"
	fi

	if test "${VM_TYPE}" == "onebula"; then
		sudo_step "/tmp/disable_repos.sh"
		sudo_step "${STEP_DIR}/setup_apt"
		sudo_step "${STEP_DIR}/setup_onebula"
		sudo_step "${STEP_DIR}/setup_agent"
		sudo_step "${STEP_DIR}/setup_udev"
		sudo_step "${STEP_DIR}/setup_test_user"
		sudo_step "${STEP_DIR}/setup_restore_sshd_config"
		sudo_step "${STEP_DIR}/setup_ssh"
		sudo_step "${STEP_DIR}/setup_prepare_new_instance"
		sudo_step "${STEP_DIR}/setup_ansible"
	fi

	if test "${VM_TYPE}" == "vagrant-qemu"; then
		sudo_step "/tmp/disable_repos.sh"
		sudo_step "${STEP_DIR}/setup_apt"
		if test "${CLOUDINIT}" == "1"; then
			sudo_step "${STEP_DIR}/setup_cloudinit"
		fi
		sudo_step "${STEP_DIR}/setup_agent"
		sudo_step "${STEP_DIR}/setup_udev"
		sudo_step "${STEP_DIR}/setup_network"
		sudo_step "${STEP_DIR}/setup_root"
		sudo_step "${STEP_DIR}/setup_vagrant"
		sudo_step "${STEP_DIR}/setup_restore_sshd_config"
		sudo_step "${STEP_DIR}/setup_ssh"
		sudo_step "${STEP_DIR}/setup_prepare_new_instance"
		sudo_step "${STEP_DIR}/setup_ansible"
	fi
	
	if test "${VM_TYPE}" == "vagrant-vbox"; then
		sudo_step "/tmp/disable_repos.sh"
		sudo_step "${STEP_DIR}/setup_apt"
		if test "${CLOUDINIT}" == "1"; then
			sudo_step "${STEP_DIR}/setup_cloudinit"
		fi
		sudo_step "${STEP_DIR}/setup_udev"
		sudo_step "/tmp/install-guest-tools.sh"
		sudo_step "${STEP_DIR}/setup_vagrant"
		sudo_step "${STEP_DIR}/setup_restore_sshd_config"
		sudo_step "${STEP_DIR}/setup_ssh"
		sudo_step "${STEP_DIR}/setup_prepare_new_instance"
		sudo_step "${STEP_DIR}/setup_ansible"
	fi

	sudo_step "${STEP_DIR}/setup_version"
}

show_vars
main

